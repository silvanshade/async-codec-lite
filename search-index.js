var searchIndex = JSON.parse('{\
"async_codec_lite":{"doc":"","t":[3,3,3,3,8,8,13,8,16,16,3,3,3,3,16,13,16,16,3,3,3,4,13,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12],"n":["Bytes","BytesCodec","BytesMut","CborCodec","Decoder","DecoderWithSkipAhead","Defunct","Encoder","Error","Error","Framed","FramedParts","FramedRead","FramedWrite","Handler","Inner","Item","Item","JsonCodec","LengthCodec","LimitCodec","LimitError","LimitExceeded","LinesCodec","OverflowError","SkipAheadHandler","advance","advance","advance_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","chunk","chunk","chunk_mut","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","codec","codec","codec_mut","continue_skipping","copy_from_slice","copy_to_bytes","copy_to_bytes","decode","decode","decode","decode","decode","decode","decode","decode_eof","decode_eof","decoder","decoder_mut","default","default","default","default","default","default","default","deref","deref","deref_mut","drop","drop","encode","encode","encode","encode","encode","encode","encode","encoder","encoder_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_parts","from_static","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_iter","into_iter","into_parts","io","is_empty","is_empty","len","len","new","new","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_close","poll_close","poll_close","poll_flush","poll_flush","poll_flush","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","prepare_skip_ahead","put","put_bytes","put_slice","read_buf","read_buffer","read_buffer","read_buffer_mut","read_buffer_mut","remaining","remaining","remaining_mut","reserve","resize","set_len","slice","slice_ref","source","split","split_off","split_off","split_to","split_to","start_send","start_send","start_send","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","truncate","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsplit","with_capacity","with_capacity","with_capacity","write_buf","write_fmt","write_str","0","0"],"q":["async_codec_liteasync_codec_lite::LimitError",""],"d":["A cheaply cloneable and sliceable chunk of contiguous …","","A unique reference to a contiguous slice of memory.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of bytes the <code>BytesMut</code> can hold without …","","","","Clears the buffer, removing all data.","Clears the buffer, removing all data. Existing capacity is …","","","","","","","","","","","","","","","","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends given bytes to this <code>BytesMut</code>.","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Creates a new <code>Bytes</code> from a static slice.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","","","","Creates a new empty <code>Bytes</code>.","","Creates a new <code>BytesMut</code> with default capacity.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reserves capacity for at least <code>additional</code> more bytes to be …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Sets the length of the buffer.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","","Removes the bytes from the current view, returning them in …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","","","","","","","","","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Creates a new <code>BytesMut</code> with the specified capacity.","","","","","","",""],"i":[0,0,0,0,0,0,1,0,2,3,0,0,0,0,4,1,2,3,0,0,0,0,1,0,0,0,5,6,6,6,5,6,7,8,9,5,5,10,11,12,1,13,6,6,14,15,16,17,7,8,9,5,10,11,12,1,13,6,6,14,15,16,17,6,5,6,6,5,6,7,8,9,5,10,13,6,7,8,9,5,10,13,6,5,6,16,17,16,18,5,5,6,2,7,8,9,10,12,13,2,2,14,14,7,8,9,5,10,13,6,5,6,6,5,6,3,7,8,9,10,12,13,15,15,7,8,9,5,5,5,5,5,5,5,10,13,6,6,6,6,6,6,6,6,6,6,7,8,9,5,5,5,10,11,11,12,1,1,13,6,6,6,14,15,16,17,6,7,8,9,5,5,5,5,5,5,5,10,11,12,1,1,1,13,6,6,6,14,15,16,17,5,6,6,16,5,14,15,16,14,15,16,14,15,16,5,6,7,8,9,5,10,11,12,1,13,6,14,15,16,17,14,15,16,5,6,16,17,5,6,5,6,7,8,9,5,12,6,14,15,16,17,5,5,5,5,5,5,6,6,6,6,6,6,14,15,16,14,15,16,14,15,16,14,15,16,4,6,6,6,17,14,16,14,16,5,6,6,6,6,6,5,5,1,6,5,6,5,6,14,15,16,7,8,9,5,10,13,6,11,1,5,6,7,8,9,5,10,11,12,1,13,6,14,15,16,17,7,8,9,5,10,11,12,1,13,6,14,15,16,17,14,15,16,7,8,9,5,10,11,12,1,13,6,14,15,16,17,6,6,14,16,17,6,6,19,20],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["usize",0]],[[["",0]]],[[["",0]]],[[["",0]],["uninitslice",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["bytes",3]],[[["",0]],["bytescodec",3]],[[["",0]],["linescodec",3]],[[["",0]],["bytesmut",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["bytes",3]],["ordering",4]],[[["",0],["bytesmut",3]],["ordering",4]],[[["",0]],["",0]],null,[[["",0]],["",0]],[[],["result",6]],[[],["bytes",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0],["bytesmut",3]],["result",4,[["option",4]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[]],[[],["bytes",3]],[[],["bytescodec",3]],[[],["linescodec",3]],[[],["bytesmut",3]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0],["bytesmut",3]],["result",4]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["bytesmut",3]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["bytes",3]],["bool",0]],[[["",0],["vec",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["bytescodec",3]],["bool",0]],[[["",0],["linescodec",3]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["",0],["str",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0],["vec",3]],["bool",0]],[[["",0],["string",3]],["bool",0]],[[["",0],["bytes",3]],["bool",0]],[[["",0],["bytesmut",3]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[],["bytes",3]],[[]],[[]],[[]],[[["vec",3,[["u8",0],["global",3]]]],["bytes",3]],[[["str",0]],["bytes",3]],[[],["bytes",3]],[[["box",3,[["global",3]]]],["bytes",3]],[[["bytesmut",3]],["bytes",3]],[[["string",3]],["bytes",3]],[[]],[[]],[[]],[[]],[[]],[[["never",0]]],[[]],[[]],[[["str",0]],["bytesmut",3]],[[]],[[],["bytesmut",3]],[[]],[[]],[[]],[[]],[[],["bytes",3]],[[],["bytesmut",3]],[[],["bytesmut",3]],[[["framedparts",3]],["framed",3]],[[],["bytes",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["pin",3]],["pin",3]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0],["",0]]],[[["",0],["",0]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["framedparts",3]],null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[]],[[]],[[]],[[],["bytes",3]],[[["usize",0]]],[[],["bytesmut",3]],[[],["framedread",3]],[[],["framedwrite",3]],[[],["framed",3]],[[],["framedparts",3]],[[["",0],["string",3]],["option",4,[["ordering",4]]]],[[["",0],["str",0]],["option",4,[["ordering",4]]]],[[["",0],["vec",3]],["option",4,[["ordering",4]]]],[[["",0],["bytes",3]],["option",4,[["ordering",4]]]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["ordering",4]]]],[[["",0]],["option",4,[["ordering",4]]]],[[["",0],["bytesmut",3]],["option",4,[["ordering",4]]]],[[["",0],["vec",3]],["option",4,[["ordering",4]]]],[[["",0],["str",0]],["option",4,[["ordering",4]]]],[[["",0],["",0]],["option",4,[["ordering",4]]]],[[["",0],["string",3]],["option",4,[["ordering",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["pin",3],["context",3]],["poll",4,[["result",4]]]],[[["",0],["bytesmut",3]]],[[["",0]]],[[["",0],["u8",0],["usize",0]]],[[["",0]]],null,[[["",0]],["bytesmut",3]],[[["",0]],["bytesmut",3]],[[["",0]],["bytesmut",3]],[[["",0]],["bytesmut",3]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0]],["usize",0]],[[["",0],["usize",0]]],[[["",0],["usize",0],["u8",0]]],[[["",0],["usize",0]]],[[["",0]],["bytes",3]],[[["",0]],["bytes",3]],[[["",0]],["option",4,[["error",8]]]],[[["",0]],["bytesmut",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["usize",0]],["bytesmut",3]],[[["",0],["usize",0]],["bytes",3]],[[["",0],["usize",0]],["bytesmut",3]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["pin",3]],["result",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[["",0],["usize",0]]],[[["",0],["usize",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0],["bytesmut",3]]],[[["usize",0]],["bytesmut",3]],[[["usize",0]],["framedread",3]],[[["usize",0]],["framed",3]],null,[[["",0],["arguments",3]],["result",4,[["error",3]]]],[[["",0],["str",0]],["result",4,[["error",3]]]],null,null],"p":[[4,"LimitError"],[8,"Decoder"],[8,"Encoder"],[8,"DecoderWithSkipAhead"],[3,"Bytes"],[3,"BytesMut"],[3,"LengthCodec"],[3,"CborCodec"],[3,"JsonCodec"],[3,"BytesCodec"],[3,"OverflowError"],[3,"LimitCodec"],[3,"LinesCodec"],[3,"FramedRead"],[3,"FramedWrite"],[3,"Framed"],[3,"FramedParts"],[8,"SkipAheadHandler"],[13,"LimitExceeded"],[13,"Inner"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};